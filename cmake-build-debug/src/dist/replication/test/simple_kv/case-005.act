# Case Description:
#   regression testing for issue #175

set:load_balance_for_test=1,not_exit_on_log_failure=1

# wait for server ready
config:{3,r1,[r2,r3]}
state:{{r1,pri,3,0},{r2,sec,3,0},{r3,sec,3,0}}

# begin write 1
# delay callback of writing shared log for #1
client:begin_write:id=1,key=k1,value=v1,timeout=0
wait:on_task_begin:node=r1,task_code=RPC_SIMPLE_KV_SIMPLE_KV_WRITE
modify:on_aio_call:node=r1,task_code=LPC_WRITE_REPLICATION_LOG_SHARED,type=WRITE,delay=0,modify_delay=2000
wait:on_task_end:node=r1,task_code=RPC_SIMPLE_KV_SIMPLE_KV_WRITE

# begin write 2
# writing shared log should be pending
client:begin_write:id=2,key=k2,value=v2,timeout=0
wait:on_task_begin:node=r1,task_code=RPC_SIMPLE_KV_SIMPLE_KV_WRITE
wait:on_task_end:node=r1,task_code=RPC_SIMPLE_KV_SIMPLE_KV_WRITE

# after delay time, wait callback of writing shared log for #1 and #2
wait:on_task_begin:node=r1,task_code=LPC_WRITE_REPLICATION_LOG_SHARED
wait:on_task_begin:node=r1,task_code=LPC_WRITE_REPLICATION_LOG_SHARED

# end write 2
client:end_write:id=2,err=err_ok,resp=0

# check data correction
client:begin_read:id=1,key=k1,timeout=0
client:end_read:id=1,err=err_ok,resp=v1
client:begin_read:id=2,key=k2,timeout=0
client:end_read:id=2,err=err_ok,resp=v2

