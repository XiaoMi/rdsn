# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

# Case Description:
#   learner send two sussive notify_learn_completion request

set:load_balance_for_test=1,not_exit_on_log_failure=1

# wait r1 to add r3 as learner
state:{{r1,pri,2,0},{r2,sec,2,0},{r3,pot,2,0}}

# r3 will notify r1 learning succeed, delay the message
modify:on_rpc_request_enqueue:node=r1,task_code=RPC_LEARN_COMPLETION_NOTIFY,rpc_name=RPC_LEARN_COMPLETION_NOTIFY,from=r3,to=r1,modify_delay=3000

# client start to write, and the prepare message to r2 lost
client:begin_write:id=1,key=k1,timeout=0
inject:on_rpc_call:rpc_name=RPC_PREPARE,from=r1,to=r2

# r2 will be removed due to timeout
config:{3,r1,[]}

# r2 & r3 will learn succeed eventually
config:{5,r1,[r2,r3]}
