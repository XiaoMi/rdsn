# Case Description:
# - close replica stub on exit

set:load_balance_for_test=1,not_exit_on_log_failure=1

# wait for server ready
config:{3,r1,[r2,r3]}
state:{{r1,pri,3,0},{r2,sec,3,0},{r3,sec,3,0}}

# begin write 1
client:begin_write:id=1,key=k1,value=v1,timeout=0

# wait for commit
state:{{r1,pri,3,1},{r2,sec,3,0},{r3,sec,3,0}}

# end write 1
client:end_write:id=1,err=err_ok,resp=0

# begin read 1
client:begin_read:id=1,key=k1,timeout=0

# end read 1
client:end_read:id=1,err=err_ok,resp=v1

# begin write 2
client:begin_write:id=2,key=k2,value=v2,timeout=0

# wait for commit
state:{{r1,pri,3,2},{r2,sec,3,1},{r3,sec,3,1}}

# end write 2
client:end_write:id=2,err=err_ok,resp=0

# begin read 2
client:begin_read:id=2,key=k2,timeout=0

# end read 2
client:end_read:id=2,err=err_ok,resp=v2

set:disable_load_balance=1
client:replica_config:receiver=r1,type=downgrade_to_inactive,node=r2
config:{4,r1,[r3]}
client:replica_config:receiver=r1,type=downgrade_to_inactive,node=r3
config:{5,r1,[]}
client:replica_config:receiver=r1,type=downgrade_to_inactive,node=r1
config:{6,-,[]}
state:{}

set:close_replica_stub_on_exit=1

